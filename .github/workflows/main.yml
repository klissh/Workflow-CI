name: MLflow CI Workflow - Advanced

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  train-build-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up job
        run: echo "Starting MLflow CI workflow"

      - name: Run actions/checkout@v3
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Check Env
        run: |
          python --version
          pip --version

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools wheel
          pip install mlflow==2.13.0 pandas==2.2.0 scikit-learn==1.4.0 dagshub

      - name: Set MLflow Tracking URI
        run: echo "MLflow tracking URI set to local"

      - name: Run mlflow project
        id: mlflow_run
        run: |
          cd MLProject
          mlflow run . --env-manager=local
          echo "MLflow project completed"

      - name: Install Python dependencies
        run: |
          pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib

      - name: Upload to Google Drive
        env:
          GOOGLE_DRIVE_CREDENTIALS: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
        run: |
          # Create credentials file
          echo "$GOOGLE_DRIVE_CREDENTIALS" > credentials.json
          
          # Find the latest run directory
          RUN_ID=$(ls -t MLProject/mlruns/0/ | grep -v meta.yaml | head -1)
          echo "Latest run ID: $RUN_ID"
          
          # Create a simple Python script to upload to Google Drive
          cat > upload_to_drive.py << 'EOF'
          import os
          import json
          from googleapiclient.discovery import build
          from google.oauth2.service_account import Credentials
          from googleapiclient.http import MediaFileUpload
          
          # Load credentials
          SCOPES = ['https://www.googleapis.com/auth/drive.file']
          creds = Credentials.from_service_account_file('credentials.json', scopes=SCOPES)
          service = build('drive', 'v3', credentials=creds)
          
          # Upload model artifacts
          import sys
          run_id = sys.argv[1]
          model_path = f'MLProject/mlruns/0/{run_id}/artifacts/model'
          
          if os.path.exists(model_path):
              # Create a zip of the model directory
              import shutil
              shutil.make_archive('model_artifacts', 'zip', model_path)
              
              # Upload to Google Drive
              file_metadata = {'name': f'model_artifacts_{run_id}.zip'}
              media = MediaFileUpload('model_artifacts.zip', mimetype='application/zip')
              file = service.files().create(body=file_metadata, media_body=media, fields='id').execute()
              print(f'Model uploaded to Google Drive with ID: {file.get("id")}')
          else:
              print('Model artifacts not found')
          EOF
          
          python upload_to_drive.py $RUN_ID || echo "Google Drive upload failed, continuing..."

      - name: Post Set up Python 3.12.7
        run: echo "Python setup completed"

      - name: Post Run actions/checkout@v3
        run: echo "Checkout completed"

      - name: Build Docker Model
        run: |
          # Find the latest run directory
          RUN_ID=$(ls -t MLProject/mlruns/0/ | grep -v meta.yaml | head -1)
          echo "Building Docker image for run: $RUN_ID"
          
          # Build Docker image using MLflow
          mlflow models build-docker \
            -m "MLProject/mlruns/0/$RUN_ID/artifacts/model" \
            -n "${{ secrets.DOCKERHUB_USERNAME }}/credit-scoring-model:latest" \
            --enable-mlserver

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/credit-scoring-model:latest ${{ secrets.DOCKERHUB_USERNAME }}/credit-scoring-model:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/credit-scoring-model:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/credit-scoring-model:${{ github.sha }}

      - name: Post Log in to Docker Hub
        run: echo "Docker operations completed"

      - name: Complete job
        run: echo "MLflow CI workflow completed successfully"
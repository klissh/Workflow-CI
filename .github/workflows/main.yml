# Nama Workflow: Final Lengkap untuk Kriteria Basic, Skilled, Advanced
name: 'ML Model CI Workflow (Final)'

# Trigger: Dijalankan HANYA saat ada perubahan di dalam folder MLProject
# atau dapat dijalankan secara manual
on:
  push:
    branches: [ main ]
    paths:
      - 'MLProjects/**'  # Pastikan path ini sesuai dengan struktur repo Anda
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Tahap 1: Mengambil kode dari repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Tahap 2: Menyiapkan lingkungan Conda dan Python
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
          
      # Tahap 3: Menginstal semua dependensi dari file conda.yaml
      - name: Install dependencies
        # Pastikan path ke file conda.yaml sudah benar
        run: conda env create -f MLProject/conda.yaml --name mlflow-credit-scoring-env
        
      # Tahap 4: Menjalankan skrip training model (Memenuhi Kriteria BASIC)
      - name: Run training script
        shell: bash -l {0} # Diperlukan agar `conda run` dapat diakses
        run: |
          echo "[BASIC] Memulai training model..."
          # Menjalankan MLflow menunjuk ke folder proyek Anda
          conda run -n mlflow-credit-scoring-env mlflow run MLProject --env-manager=local
          echo "[BASIC] Training selesai."

      # Tahap 5: Zip dan Unggah Artefak ke Google Drive (Memenuhi Kriteria SKILLED)
      - name: Zip artifacts for Google Drive
        run: zip -r ml-artifacts-gdrive.zip mlruns/

      - name: Upload artifact to Google Drive
        uses: lguibr/simple-google-drive-uploader@v2
        with:
          # Menggunakan nama secrets yang PERSIS seperti milik Anda
          credentials: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
          parent-id: ${{ secrets.GDRIVE_PARENT_ID }}
          file-name: 'ml-artifacts-${{ github.sha }}.zip'
          file-path: 'ml-artifacts-gdrive.zip'
          overwrite: 'true'

      # Tahap 6: Build dan Push Docker Image (Memenuhi Kriteria ADVANCED)
      - name: Build and Push Docker Image
        # Menggunakan nama secrets yang PERSIS seperti milik Anda
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "[ADVANCED] Memulai proses build dan push Docker image..."
          
          # 1. Login ke Docker Hub
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          
          # 2. Temukan Run ID terbaru dari hasil training
          LATEST_RUN_ID=$(ls -t mlruns/0 | head -n 1)
          
          # 3. Definisikan Model URI dan Nama Image Docker
          MODEL_URI="mlruns/0/$LATEST_RUN_ID/artifacts/model"
          IMAGE_NAME="$DOCKERHUB_USERNAME/credit-scoring-cicd" # Anda bisa ganti nama image ini
          
          echo "Model URI: $MODEL_URI"
          echo "Nama Docker Image: $IMAGE_NAME"

          # 4. Build Docker image menggunakan 'mlflow models build-docker' (CARA YANG BENAR SESUAI TUGAS)
          conda run -n mlflow-credit-scoring-env mlflow models build-docker --model-uri "$MODEL_URI" -t "$IMAGE_NAME:latest" --enable-mlserver
          
          # 5. Push image ke Docker Hub
          docker push "$IMAGE_NAME:latest"
          
          GIT_SHA=$(git rev-parse --short HEAD)
          docker tag "$IMAGE_NAME:latest" "$IMAGE_NAME:$GIT_SHA"
          docker push "$IMAGE_NAME:$GIT_SHA"
          
          echo "[ADVANCED] Docker image berhasil di-push ke Docker Hub."